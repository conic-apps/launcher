name: Conic Launcher Auto Build
on:
  pull_request:
    paths:
      - ".github/workflows/build.yml"
  push:
    branches:
      - master

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
            arch: "aarch64"
            target: "aarch64"
          - platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
            arch: "x64"
            target: "x86_64"
          - platform: "ubuntu-22.04"
            args: ""
            rpm: "x86_64"
            deb: "amd64"
            appimage: "amd64"
          - platform: "ubuntu-22.04-arm"
            args: ""
            rpm: "x86_64"
            deb: "amd64"
            appimage: "amd64"
          - platform: "windows-latest"
            args: ""
          - platform: ""
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache-dependency-path: "pnpm-lock.yaml"

      - name: Enable Corepack and install pnpm
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: install frontend dependencies
        run: pnpm install

      - name: Build the app
        env:
          TAURI_SIGNING_PRIVATE_KEY: dW50cnVzdGVkIGNvbW1lbnQ6IHJzaWduIGVuY3J5cHRlZCBzZWNyZXQga2V5ClJXUlRZMEl5THZzOE1QK1JrRWxjb3VOZ3dHQ2cvdWNhaXVRb09Ycm1pakllaFQvUlFya0FBQkFBQUFBQUFBQUFBQUlBQUFBQUc3MVlnU0tYMmtjcjc0V0pZeVBxMklMRkhya2F3MnAycjd6OGxnYTJURlNJSmk1SEVURmxzaGxYL2NXZW0xVVV1cTB2dHBkMGtFc3N3WkpxYjBPaDdsVzZyVTFBRi9LOXdRUThEcEQvWmFQVURDcXZXTlRNL0Nla1VSUWZVRFBjUkJSTzdkS08rY0U9Cg==
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: abcd
        # env:
        #   TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        #   TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        run: |
          echo $TAURI_SIGNING_PRIVATE_KEY
          echo $TAURI_SIGNING_PRIVATE_KEY_PASSWORD
          pnpm run tauri build ${{ matrix.args }}

      - name: Get app version
        run: echo "APP_VERSION=$(jq -r .version core/tauri.conf.json)" >> $GITHUB_ENV

      - name: Upload deb bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm'
        with:
          name: Debian bundle(amd64)
          path: ${{ github.workspace }}/target/release/bundle/deb/conic-launcher_${{ env.APP_VERSION }}_${{ matrix.deb }}.deb

      - name: Upload rpm bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm'
        with:
          name: RPM bundle(x86_64)
          path: ${{ github.workspace }}/target/release/bundle/rpm/conic-launcher-${{ env.APP_VERSION }}-1.${{ matrix.rpm }}.rpm

      - name: Upload appimage bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm'
        with:
          name: AppImage bundle(amd64)
          path: ${{ github.workspace }}/target/release/bundle/appimage/conic-launcher_${{ env.APP_VERSION }}_${{ matrix.appimage }}.AppImage

      - name: Upload appimage updater signature
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'ubuntu-22.04' || matrix.platform == 'ubuntu-22.04-arm'
        with:
          name: Updater signature(amd64-appimage)
          path: ${{ github.workspace }}/target/release/bundle/appimage/conic-launcher_${{ env.APP_VERSION }}_${{ matrix.appimage }}.AppImage.sig

      - name: Upload Windows installation-free exe
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: Windows Installation-free(64-bit-exe)
          path: ${{ github.workspace }}/target/release/conic-launcher.exe

      - name: Upload Microsoft Installer bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: Microsoft Installer bundle(64-bit)
          path: ${{ github.workspace }}/target/release/bundle/msi/conic-launcher_${{ env.APP_VERSION }}_x64_en-US.msi

      - name: Upload Microsoft Installer signature
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: Updater signature(64-bit-msi)
          path: ${{ github.workspace }}/target/release/bundle/msi/conic-launcher_${{ env.APP_VERSION }}_x64_en-US.msi.sig

      - name: Upload NSIS bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: NSIS bundle(64-bit)
          path: ${{ github.workspace }}/target/release/bundle/nsis/conic-launcher_${{ env.APP_VERSION }}_x64-setup.exe

      - name: Upload NSIS updater signature
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'windows-latest'
        with:
          name: Updater signature(64-bit-nsis)
          path: ${{ github.workspace }}/target/release/bundle/nsis/conic-launcher_${{ env.APP_VERSION }}_x64-setup.exe.sig

      - name: Upload dmg bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'macos-latest'
        with:
          name: MacOS ${{ matrix.arch }} bundle(dmg)
          path: ${{ github.workspace }}/target/${{matrix.target}}-apple-darwin/release/bundle/dmg/conic-launcher_${{ env.APP_VERSION }}_${{ matrix.arch }}.dmg

      - name: Upload macos updater bundle
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'macos-latest'
        with:
          name: MacOS ${{ matrix.arch }} updater bundle
          path: ${{ github.workspace }}/target/${{matrix.target}}-apple-darwin/release/bundle/macos/conic-launcher.app.tar.gz

      - name: Upload macos updater signature
        uses: actions/upload-artifact@v4
        if: matrix.platform == 'macos-latest'
        with:
          name: MacOS ${{ matrix.arch }} updater signature
          path: ${{ github.workspace }}/target/${{matrix.target}}-apple-darwin/release/bundle/macos/conic-launcher.app.tar.gz.sig
